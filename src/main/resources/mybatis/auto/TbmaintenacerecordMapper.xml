<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reisen.mapper.auto.TbmaintenacerecordMapper">
  <resultMap id="BaseResultMap" type="com.reisen.model.auto.Tbmaintenacerecord">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="equipmentid" jdbcType="INTEGER" property="equipmentid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="maintenancedate" jdbcType="TIMESTAMP" property="maintenancedate" />
    <result column="maintenanceContent" jdbcType="VARCHAR" property="maintenanceContent" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
  
     	id,
     	equipmentid,
     	name,
     	userid,
     	maintenancedate,
     	maintenanceContent,
     	status,
   	  	username
  	
  </sql>
  
  <select id="selectByExample" parameterType="com.reisen.model.auto.TbmaintenacerecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbmaintenacerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbmaintenacerecord
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbmaintenacerecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.reisen.model.auto.TbmaintenacerecordExample">
    delete from tbmaintenacerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.reisen.model.auto.Tbmaintenacerecord">
    insert into tbmaintenacerecord (
      id,
      equipmentid,
      name,
      userid,
      maintenancedate,
      maintenanceContent,
      status,
   	  username
    )
    values (
     	#{id,jdbcType=INTEGER},
     	#{equipmentid,jdbcType=INTEGER},
     	#{name,jdbcType=VARCHAR},
     	#{userid,jdbcType=VARCHAR},
     	#{maintenancedate,jdbcType=TIMESTAMP},
     	#{maintenanceContent,jdbcType=VARCHAR},
     	#{status,jdbcType=VARCHAR},
   	  #{username,jdbcType=VARCHAR}
    )
  </insert>
  
  <insert id="insertSelective" parameterType="com.reisen.model.auto.Tbmaintenacerecord">
    insert into tbmaintenacerecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
    
      <if test="id != null">
        id,
      </if>
    
      <if test="equipmentid != null">
        equipmentid,
      </if>
    
      <if test="name != null">
        name,
      </if>
    
      <if test="userid != null">
        userid,
      </if>
    
      <if test="maintenancedate != null">
        maintenancedate,
      </if>
    
      <if test="maintenanceContent != null">
        maintenanceContent,
      </if>
    
      <if test="status != null">
        status,
      </if>
    
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="equipmentid != null">
        #{equipmentid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="maintenancedate != null">
        #{maintenancedate,jdbcType=TIMESTAMP},
      </if>
      <if test="maintenanceContent != null">
        #{maintenanceContent,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="countByExample" parameterType="com.reisen.model.auto.TbmaintenacerecordExample" resultType="java.lang.Long">
    select count(*) from tbmaintenacerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update tbmaintenacerecord
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentid != null">
        equipmentid = #{record.equipmentid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenancedate != null">
        maintenancedate = #{record.maintenancedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maintenanceContent != null">
        maintenanceContent = #{record.maintenanceContent,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
     
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByExample" parameterType="map">
    update tbmaintenacerecord
    set
    	 
    	 id = #{record.id,jdbcType=INTEGER},
    	 
    	 equipmentid = #{record.equipmentid,jdbcType=INTEGER},
    	 
    	 name = #{record.name,jdbcType=VARCHAR},
    	 
    	 userid = #{record.userid,jdbcType=VARCHAR},
    	 
    	 maintenancedate = #{record.maintenancedate,jdbcType=TIMESTAMP},
    	 
    	 maintenanceContent = #{record.maintenanceContent,jdbcType=VARCHAR},
    	 
    	 status = #{record.status,jdbcType=VARCHAR},
    	 
    	 username = #{record.username,jdbcType=VARCHAR}
    
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.reisen.model.auto.Tbmaintenacerecord">
    update tbmaintenacerecord
    <set>
      
      <if test="equipmentid != null ">
        equipmentid = #{equipmentid,jdbcType=INTEGER},
      </if>
      
      <if test="name != null ">
        name = #{name,jdbcType=VARCHAR},
      </if>
      
      <if test="userid != null ">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      
      <if test="maintenancedate != null ">
        maintenancedate = #{maintenancedate,jdbcType=TIMESTAMP},
      </if>
      
      <if test="maintenanceContent != null ">
        maintenanceContent = #{maintenanceContent,jdbcType=VARCHAR},
      </if>
      
      <if test="status != null ">
        status = #{status,jdbcType=VARCHAR},
      </if>
      
      <if test="username != null ">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    
    where 
    
    id = #{id,jdbcType=INTEGER}
  
  </update>

	

  <update id="updateByPrimaryKey" parameterType="com.reisen.model.auto.Tbmaintenacerecord">
    update tbmaintenacerecord
    set 
	  
		equipmentid = #{equipmentid,jdbcType=INTEGER},
	  
		name = #{name,jdbcType=VARCHAR},
	  
		userid = #{userid,jdbcType=VARCHAR},
	  
		maintenancedate = #{maintenancedate,jdbcType=TIMESTAMP},
	  
		maintenanceContent = #{maintenanceContent,jdbcType=VARCHAR},
	  
		status = #{status,jdbcType=VARCHAR},
		
		username = #{username,jdbcType=VARCHAR}
	
    where 
    
    id = #{id,jdbcType=INTEGER}
    
  </update>
  
   
</mapper>